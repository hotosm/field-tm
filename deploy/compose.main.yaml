# Copyright (c) 2022, 2023 Humanitarian OpenStreetMap Team
# This file is part of FMTM.
#
#     FMTM is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     FMTM is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with FMTM.  If not, see <https:#www.gnu.org/licenses/>.
#

name: fmtm-main

volumes:
  nginx-configs:
    name: fmtm-nginx-configs-main
  fmtm_frontend:
    name: fmtm-frontend-main
  fmtm_mapper_frontend:
    name: fmtm-mapper-frontend-main
  fmtm_db_data:
    name: fmtm-db-data-main
  fmtm_data:
    name: fmtm-s3-data-main
  fmtm_logs:
    name: fmtm-logs-main
  fmtm_images:
    name: fmtm-images-main
  fmtm_tiles:
    name: fmtm-tiles-main
  certs:
    name: fmtm-certs-main

networks:
  fmtm-net:
    name: fmtm-main
    ipam:
      driver: default
      config:
        - subnet: 10.20.30.0/24

# Used for both bunkerweb proxy + scheduler (config) service
x-proxy-env: &proxy-env # General
  BUNKERWEB_INSTANCES: proxy:5000
  LOG_LEVEL: notice
  USE_BUNKERNET: no
  DISABLE_DEFAULT_SERVER: yes
  API_WHITELIST_IP: 127.0.0.0/8 10.20.30.0/24
  MULTISITE: yes
  USE_REVERSE_PROXY: yes
  REVERSE_PROXY_INTERCEPT_ERRORS: no
  ALLOWED_METHODS: OPTIONS|HEAD|GET|POST|PATCH|PUT|DELETE
  USE_REAL_IP: yes
  SERVE_FILES: yes
  USE_BACKUP: no
  USE_METRICS: no
  # USE_ANTIBOT: yes
  USE_LIMIT_CONN: yes
  USE_BAD_BEHAVIOR: yes
  USE_LIMIT_REQ: yes
  USE_MODSECURITY: yes
  USE_GZIP: yes
  # On client, brotli is preferred over gzip if both are enabled
  USE_BROTLI: yes
  # For OpenTelemetry
  KEEP_UPSTREAM_HEADERS: "*"
  CUSTOM_HEADER: "Access-Control-Allow-Headers: traceparent,tracestate"
  AUTO_LETS_ENCRYPT: yes
  EMAIL_LETS_ENCRYPT: ${CERT_EMAIL}
  # USE_LETS_ENCRYPT_STAGING: yes
  # Reverse proxy configs
  SERVER_NAME: dev.fmtm.hotosm.org mapper.fmtm.hotosm.org api.fmtm.hotosm.org s3.fmtm.hotosm.org sync.fmtm.hotosm.org odk.fmtm.hotosm.org
  # We need this to allow for client-side routing in the SPA (from index.html)
  fmtm.hotosm.org_ERRORS: 404=/index.html
  mapper.fmtm.hotosm.org_ERRORS: 404=/index.html
  api.fmtm.hotosm.org_REVERSE_PROXY_HOST: http://api:8000
  api.fmtm.hotosm.org_MAX_CLIENT_SIZE: 1G
  s3.fmtm.hotosm.org_REVERSE_PROXY_HOST: http://s3:9000
  s3.fmtm.hotosm.org_MAX_CLIENT_SIZE: 10G
  sync.fmtm.hotosm.org_REVERSE_PROXY_HOST: http://electric:3000
  sync.fmtm.hotosm.org_MAX_CLIENT_SIZE: 1G

services:
  proxy:
    image: "ghcr.io/bunkerity/bunkerweb:${BUNKERWEB_TAG:-1.6.0}"
    depends_on:
      # Frontends must be built and available first
      ui:
        condition: service_completed_successfully
    volumes:
      - nginx-configs:/etc/nginx
      # - certs:/etc/letsencrypt
      - certs:/data
      - fmtm_frontend:/var/www/html/dev.fmtm.hotosm.org:ro
      - fmtm_mapper_frontend:/var/www/html/mapper.dev.fmtm.hotosm.org:ro
    environment: *proxy-env
    ports:
      - 80:8080
      - 443:8443
    networks:
      - fmtm-net
    restart: "unless-stopped"

  proxy-setup:
    extends:
      file: compose.development.yaml
      service: proxy-setup
    # Override the environment variables
    environment: *proxy-env

  api:
    extends:
      file: compose.staging.yaml
      service: api

  ui:
    extends:
      file: compose.staging.yaml
      service: ui

  s3:
    extends:
      file: compose.staging.yaml
      service: s3

  fmtm-db:
    extends:
      file: compose.staging.yaml
      service: fmtm-db

  electric:
    extends:
      file: compose.staging.yaml
      service: electric

  migrations:
    extends:
      file: compose.staging.yaml
      service: migrations

  scheduler:
    extends:
      file: compose.staging.yaml
      service: scheduler

  backups:
    image: "ghcr.io/hotosm/fmtm/backend:main"
    depends_on:
      fmtm-db:
        condition: service_healthy
      s3:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - fmtm-net
    entrypoint: ["/backup-entrypoint.sh"]
    restart: "on-failure:2"
    healthcheck:
      test: pg_isready -U ${FMTM_DB_USER} -d ${FMTM_DB_NAME}
      start_period: 5s
      interval: 10s
      timeout: 5s
      retries: 3
