# Copyright (c) Humanitarian OpenStreetMap Team
# This file is part of Field-TM.
#
#     Field-TM is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     Field-TM is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with Field-TM.  If not, see <https:#www.gnu.org/licenses/>.
#

name: fmtm-stage

volumes:
  fmtm_frontend:
    name: fmtm-frontend-staging
  fmtm_mapper_frontend:
    name: fmtm-mapper-frontend-staging
  fmtm_db_data:
    name: fmtm-db-data-staging
  fmtm_data:
    name: fmtm-s3-data-staging
  fmtm_logs:
    name: fmtm-logs-staging
  fmtm_images:
    name: fmtm-images-staging
  fmtm_tiles:
    name: fmtm-tiles-staging
  certs:
    name: fmtm-certs-staging
  central_db_data:
    name: fmtm-central-db-data-staging
  central_frontend:
    name: fmtm-central-frontend-staging

networks:
  fmtm-net:
    name: fmtm-staging
    ipam:
      driver: default
      config:
        - subnet: 10.20.30.0/24

services:
  proxy:
    image: "bunkerity/bunkerweb-all-in-one:${BUNKERWEB_TAG:-1.6.2-rc1}"
    depends_on:
      # Frontends must be built and available first
      ui:
        condition: service_completed_successfully
      central-ui:
        condition: service_completed_successfully
    volumes:
      # - certs:/etc/letsencrypt
      - certs:/data
      - fmtm_frontend:/var/www/html/stage.fmtm.hotosm.org:ro
      - fmtm_mapper_frontend:/var/www/html/mapper.stage.fmtm.hotosm.org:ro
      - central_frontend:/var/www/html/odk.stage.fmtm.hotosm.org:ro
    environment:
      # General
      BUNKERWEB_INSTANCES: proxy:5000
      LOG_LEVEL: notice
      UI_WIZARD: no
      USE_BUNKERNET: no
      DISABLE_DEFAULT_SERVER: yes
      API_WHITELIST_IP: 127.0.0.0/8 10.20.30.0/24
      # Avoid running ModSec rules on internal service calls
      WHITELIST_IP: 10.20.30.0/24
      WHITELIST_URI: https://stage.fmtm.hotosm.org
      MULTISITE: yes
      USE_REVERSE_PROXY: yes
      # Required for electric headers electric-offset, electric-handle, electric-schema,electric-cursor,electric-up-to-date
      KEEP_UPSTREAM_HEADERS: yes
      REVERSE_PROXY_INTERCEPT_ERRORS: no
      ALLOWED_METHODS: OPTIONS|HEAD|GET|POST|PATCH|PUT|DELETE
      USE_REAL_IP: yes
      SERVE_FILES: yes
      USE_BACKUP: no
      USE_METRICS: no
      # USE_ANTIBOT: yes
      USE_LIMIT_CONN: yes
      USE_BAD_BEHAVIOR: no
      USE_LIMIT_REQ: yes
      USE_MODSECURITY: yes
      USE_GZIP: yes
      # On client, brotli is preferred over gzip if both are enabled
      USE_BROTLI: yes
      # For OpenTelemetry (Allow-Headers are what the browser can include in the REQUEST headers)
      CUSTOM_HEADER: "Access-Control-Allow-Headers: DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,traceparent,tracestate"
      AUTO_LETS_ENCRYPT: yes
      EMAIL_LETS_ENCRYPT: ${CERT_EMAIL}
      # USE_LETS_ENCRYPT_STAGING: yes
      # Reverse proxy configs
      SERVER_NAME: stage.fmtm.hotosm.org mapper.stage.fmtm.hotosm.org api.stage.fmtm.hotosm.org s3.stage.fmtm.hotosm.org sync.stage.fmtm.hotosm.org odk.stage.fmtm.hotosm.org
      # We need this to allow for client-side routing in the SPA (from index.html)
      stage.fmtm.hotosm.org_ERRORS: 404=/index.html
      mapper.stage.fmtm.hotosm.org_ERRORS: 404=/index.html
      mapper.stage.fmtm.hotosm.org_MAX_CLIENT_SIZE: 1G
      # We allow accelerometer, camera, fullscreen, geolocation, magnetometer, gyroscope
      mapper.stage.fmtm.hotosm.org_PERMISSIONS_POLICY: accelerometer=(self), ambient-light-sensor=(), attribution-reporting=(), autoplay=(), battery=(), bluetooth=(), browsing-topics=(), camera=(self), compute-pressure=(), display-capture=(), encrypted-media=(), execution-while-not-rendered=(), execution-while-out-of-viewport=(), fullscreen=(self), gamepad=(), geolocation=(self), gyroscope=(self), hid=(), identity-credentials-get=(), idle-detection=(), local-fonts=(), magnetometer=(self), microphone=(), midi=(), otp-credentials=(), payment=(), picture-in-picture=(), publickey-credentials-create=(), publickey-credentials-get=(), screen-wake-lock=(), serial=(), speaker-selection=(), storage-access=(), usb=(), web-share=(), window-management=(), xr-spatial-tracking=(), interest-cohort=()
      api.stage.fmtm.hotosm.org_REVERSE_PROXY_HOST: http://api:8000
      api.stage.fmtm.hotosm.org_MAX_CLIENT_SIZE: 1G
      # Increase timeout slightly for long project creation requests
      api.stage.fmtm.hotosm.org_REVERSE_PROXY_READ_TIMEOUT: 90s
      s3.stage.fmtm.hotosm.org_REVERSE_PROXY_HOST: http://s3:9000
      s3.stage.fmtm.hotosm.org_MAX_CLIENT_SIZE: 10G
      # CORS must be enabled for Minio to work
      s3.stage.fmtm.hotosm.org_USE_CORS: yes
      s3.stage.fmtm.hotosm.org_CORS_ALLOW_ORIGIN: https://stage.fmtm.hotosm.org
      sync.stage.fmtm.hotosm.org_REVERSE_PROXY_HOST: http://electric:3000
      sync.stage.fmtm.hotosm.org_MAX_CLIENT_SIZE: 1G
      # CORS must be enabled for Electric to work
      sync.stage.fmtm.hotosm.org_USE_CORS: yes
      sync.stage.fmtm.hotosm.org_CORS_ALLOW_ORIGIN: https://mapper.stage.fmtm.hotosm.org
      sync.stage.fmtm.hotosm.org_CORS_ALLOW_METHODS: GET, HEAD, DELETE, OPTIONS
      # Expose-Headers are RESPONSE headers the browser is allowed to access
      sync.stage.fmtm.hotosm.org_CORS_EXPOSE_HEADERS: electric-offset,electric-handle,electric-schema,electric-cursor,electric-up-to-date
      odk.stage.fmtm.hotosm.org_REVERSE_PROXY_HOST: http://central:8383
      odk.stage.fmtm.hotosm.org_REVERSE_PROXY_URL: ~ ^/v\d
      # buffer requests, but not responses, so streaming out works
      odk.stage.fmtm.hotosm.org_REVERSE_PROXY_BUFFERING: no
      odk.stage.fmtm.hotosm.org_MAX_CLIENT_SIZE: 1G
    ports:
      - 80:8080
      - 443:8443
    networks:
      - fmtm-net
    restart: "unless-stopped"

  api:
    extends:
      file: compose.dev.yaml
      service: api
  ui:
    extends:
      file: compose.dev.yaml
      service: ui
  central:
    extends:
      file: compose.dev.yaml
      service: central
  central-webhook:
    extends:
      file: compose.dev.yaml
      service: central-webhook
  pyxform:
    extends:
      file: compose.dev.yaml
      service: pyxform
  central-ui:
    extends:
      file: compose.dev.yaml
      service: central-ui
  s3:
    extends:
      file: compose.dev.yaml
      service: s3
  fmtm-db:
    extends:
      file: compose.dev.yaml
      service: fmtm-db
  electric:
    extends:
      file: compose.dev.yaml
      service: electric
  central-db:
    extends:
      file: compose.dev.yaml
      service: central-db
  migrations:
    extends:
      file: compose.dev.yaml
      service: migrations
  scheduler:
    extends:
      file: compose.dev.yaml
      service: scheduler

  backups:
    image: "ghcr.io/hotosm/field-tm/backend:${GIT_BRANCH}"
    depends_on:
      proxy:
        condition: service_healthy
      fmtm-db:
        condition: service_healthy
      central-db:
        condition: service_healthy
      s3:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - fmtm-net
    entrypoint: ["/backup-entrypoint.sh"]
    restart: "on-failure:2"
    healthcheck:
      test: pg_isready -h fmtm-db
      start_period: 5s
      interval: 10s
      timeout: 5s
      retries: 3
